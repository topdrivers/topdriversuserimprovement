apply plugin: 'com.android.application'

android {
    signingConfigs {
        mconfig {
            //storeFile file('E:\\Project\\Driver\\artistixe-master\\topDriverUser\\jks\\userv2.jks')
            storeFile file('C:\\Users\\smail\\Documents\\Top Drivers\\android\\user\\topDriverUser\\topDriverUser\\jks\\userv2.jks')
            storePassword '123456'
            keyAlias 'userAlias'
            keyPassword '123456'
        }
    }
    compileSdkVersion 29
    defaultConfig {
        applicationId "com.topdrivers.userv2"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 8
        versionName "1.6"
//        versionCode getVersionCode()
//        versionName getVersionName()
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        signingConfig signingConfigs.mconfig
    }
    lintOptions {
        // if true, stop the gradle build if errors are found
        abortOnError false
        // turn on the given issue id's
        enable 'RtlHardcoded', 'RtlCompat', 'RtlEnabled'
    }
    dexOptions {
        javaMaxHeapSize "4g"
        preDexLibraries = false
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    repositories {
        maven {
            url uri('mint-plugin-repo-5.1.0')
        }
    }
}

repositories {
    mavenCentral()
}

def getVersionCode = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-list', '--first-parent', '--count', 'master'
            standardOutput = stdout
        }
        return Integer.parseInt(stdout.toString().trim())
    }
    catch (ignored) {
        return -1
    }
}
def getVersionName = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'describe', '--tags'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    }
    catch (ignored) {
        return null
    }
}

allprojects {
    repositories {
        configurations.all {
            resolutionStrategy.eachDependency { DependencyResolveDetails details ->
                def requested = details.requested
                if (requested.group == 'com.android.support') {
                    if (!requested.name.startsWith("multidex")) {
                        details.useVersion '26.0.0'
                    }
                }
                /*if (requested.group == 'com.google.android.gms') {
                    details.useVersion '12.0.1'
                }
                if (requested.group == 'com.google.firebase') {
                    details.useVersion '12.0.1'
                }*/
            }
        }

        jcenter()
        maven {
             url "https://jitpack.io"
//            url "https://maven.google.com"
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'androidx.multidex:multidex:2.0.0'
    implementation 'com.airbnb.android:lottie:2.7.0'
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.5'
    implementation 'com.mikhaellopez:circularimageview:3.0.2'
    implementation 'de.hdodenhof:circleimageview:2.2.0'
    implementation 'com.google.android.material:material:1.0.0'
//    implementation 'uk.co.chrisjenx:calligraphy:2.3.0'
    implementation 'io.github.inflationx:calligraphy3:3.1.1'
    implementation 'io.github.inflationx:viewpump:2.0.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.facebook.android:facebook-login:5.15.3'
    implementation 'com.facebook.android:account-kit-sdk:4.39.0'
    implementation 'com.braintreepayments:card-form:3.0.3'
    implementation 'com.stripe:stripe-android:8.1.0'
    implementation 'com.android.volley:volley:1.1.1'
    implementation 'com.h6ah4i.android.materialshadowninepatch:materialshadowninepatch:0.6.5'
    implementation 'com.skyfishjy.ripplebackground:library:1.0.1'
    implementation 'com.koushikdutta.ion:ion:2.2.1'
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'com.splunk:mint-android-sdk:5.1.0'
    implementation 'com.github.citux:datetimepicker:0.2.0'
    implementation 'com.intuit.sdp:sdp-android:1.0.6'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.squareup.retrofit2:retrofit:2.6.0'
    /*implementation 'com.google.android.gms:play-services:12.0.1'
    implementation "com.google.firebase:firebase-auth:16.0.1"
    implementation "com.google.firebase:firebase-core:16.0.1"
    implementation 'com.google.firebase:firebase-messaging:17.1.0'*/
    implementation "com.google.firebase:firebase-auth:19.3.2"
    implementation "com.google.firebase:firebase-core:17.2.2"
    implementation 'com.google.firebase:firebase-messaging:20.1.0'
    implementation 'com.google.firebase:firebase-config:19.1.1'
    implementation 'com.google.android.gms:play-services-places:17.0.0'
    implementation 'com.google.android.libraries.places:places:2.2.0'
    implementation 'com.google.android.gms:play-services-location:17.0.0'
    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    implementation 'com.google.android.gms:play-services-auth:17.0.0'
    // Recommended: Add the Firebase SDK for Google Analytics.
    implementation 'com.google.firebase:firebase-analytics:17.2.2'
    implementation 'com.github.joielechong:countrycodepicker:2.4.2'


    // Add the Firebase SDK for Crashlytics.
    implementation 'com.google.firebase:firebase-crashlytics:17.0.0-beta01'

    testImplementation 'junit:junit:4.12'
}
apply plugin: 'com.google.gms.google-services'
// Apply the Crashlytics Gradle plugin
apply plugin: 'com.google.firebase.crashlytics'